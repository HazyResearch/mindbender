#!/usr/bin/env bash
appName=mindbender

shopt -s extglob
set -eu
. build-webapp.sh
shouldUglify=${shouldUglify:-false}

# Install all dependencies if necessary
if [[ node_modules -ot package.json ||
        node_modules -ot bower.json ||
        build/bower_components -ot bower.json ]]; then
    npm install
    touch node_modules build/bower_components
fi
export PATH="$PWD/node_modules/.bin:$PATH"
export NODE_PATH="$PWD/node_modules${NODE_PATH:+:$NODE_PATH}"

# Compile all CoffeeScript files with source map, LESS to CSS, symlink HTMLs
cd src
compile from=.coffee to=.js   with=compile-coffee src=../build/src/%s out=../build/%s **/*.coffee
compile from=.less   to=.css  with=compile-less   src=../build/src/%s out=../build/%s **/*.less
compile from=.html   to=.html with=:              src=../build/%s     out=../build/%s **/*.html
compile from=.css    to=.css  with=:              src=../build/%s     out=../build/%s **/*.css
compile from=.png    to=.png  with=:              src=../build/%s     out=../build/%s **/*.png
compile from=.gif    to=.gif  with=:              src=../build/%s     out=../build/%s **/*.gif
compile from=.json   to=.json with=:              src=../build/%s     out=../build/%s **/*.json
cd ..

# remove all dangling symlinks
find build -type l ! -exec [ -e {} ] \; -exec rm -fv {} +

# concatenate all .js files
cd build
ln -sfn ../node_modules
shopt -s nullglob
files=(
node_modules/source-map-support/browser-source-map-support.js

bower_components/modernizr/modernizr.js
bower_components/underscore/underscore.js

bower_components/jquery/dist/jquery.js
bower_components/jquery-ui/jquery-ui.js
bower_components/bootstrap/dist/js/bootstrap.js
bower_components/jquery-csv/src/jquery.csv.js
bower_components/jquery.scrollTo/jquery.scrollTo.js

bower_components/angular/angular.js
bower_components/angular-route/angular-route.js
bower_components/angular-bootstrap/ui-bootstrap.js
bower_components/angular-bootstrap/ui-bootstrap-tpls.js
bower_components/angular-hotkeys/build/hotkeys.js

bower_components/highcharts-release/highcharts.js

{!(bower_components|node_modules)/**/,}!(*_test|${appName}|${appName}.*).js
)
shopt -u nullglob

# See if any files have changed and we need to compile .js again
hasChanged=false
for input in "${files[@]}"; do
    [[ -e "$input" ]] || { echo >&2 "$input: Not found"; false; }
    [[ "$input" -nt ${appName}.js ]] || continue
    echo >&2 "$input has changed, recompiling ${appName}.js"
    hasChanged=true
    break
done
if $hasChanged; then
    # Concatenate .js files with their source maps
    # See: https://github.com/kozy4324/grunt-concat-sourcemap#readme
    ../js-concat-sourcemap ${appName}.js "${files[@]}"
    ln -f ${appName}.js     ${appName}.concat.js
    ln -f ${appName}.js.map ${appName}.concat.js.map

    # Annotate angular dependencies
    echo >&2 "${appName}.annotate.js ng-annotates ${appName}.js"
    ng-annotate -o ${appName}.annotate.js -a ${appName}.js

    # Uglify to produce the final output
    if $shouldUglify; then
        echo >&2 "${appName}.js uglifies ${appName}.annotate.js"
        uglifyjs ${appName}.annotate.js --output ${appName}.js \
            --in-source-map ${appName}.concat.js.map --source-map ${appName}.js.map \
            --mangle --compress \
            #
    else
        ln -vf ${appName}.annotate.js ${appName}.js
    fi
else
    echo >&2 "${appName}.js is up-to-date"
fi


# Construct the final version at app/ with necessary files only
echo >&2 "Staging final products at app/"
dest=../app
mkdir -p $dest
rsync -aH --omit-dir-times --delete \
    . $dest/ \
    --exclude=/{bower_components,node_modules,src} \
    --include=/${appName}.{js,js.map} \
    --exclude=*.{js,js.map} \
    -v
relsymlink  bower_components      $dest/
