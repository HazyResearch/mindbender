#!/usr/bin/env bash
appName=mindbender

shopt -s extglob
set -eu
. build-webapp.sh
shouldUglify=${shouldUglify:-false}

# Install all dependencies if necessary
if [[ node_modules -ot package.json ||
        node_modules -ot bower.json ||
        app/bower_components -ot bower.json ]]; then
    npm install
    touch node_modules app/bower_components
fi
export PATH="$PWD/node_modules/.bin:$PATH"
export NODE_PATH="$PWD/node_modules${NODE_PATH:+:$NODE_PATH}"

# Compile all CoffeeScript files with source map, LESS to CSS, symlink HTMLs
cd src
compile from=.coffee to=.js   with=compile-coffee src=../app/src/%s out=../app/%s **/*.coffee
compile from=.less   to=.css  with=compile-less   src=../app/src/%s out=../app/%s **/*.less
compile from=.html   to=.html with=:              src=../app/%s     out=../app/%s **/*.html
cd ..

# concatenate all .js files
cd app
ln -sfn ../node_modules
shopt -s nullglob
files=(
bower_components/jquery/dist/jquery.js
bower_components/bootstrap/dist/js/bootstrap.js
bower_components/jquery-csv/src/jquery.csv.js

bower_components/angular/angular.js
bower_components/angular-route/angular-route.js
bower_components/angular-bootstrap/ui-bootstrap.js
bower_components/angular-bootstrap/ui-bootstrap-tpls.js

{!(bower_components|node_modules)/**/,}!(*_test|${appName}|${appName}.*).js
)

# See if any files have changed and we need to compile .js again
hasChanged=false
for input in "${files[@]}"; do
    [[ ! -L "$input" || -e "$input" ]] || continue
    [[ "$input" -nt ${appName}.js ]] || continue
    echo >&2 "$input has changed, recompiling ${appName}.js"
    hasChanged=true
    break
done
if $hasChanged; then
    # Concatenate .js files with their source maps
    # See: https://github.com/kozy4324/grunt-concat-sourcemap#readme
    ../js-concat-sourcemap ${appName}.concat.js "${files[@]}"

    # Annotate angular dependencies
    echo >&2 "${appName}.annotate.js ng-annotates ${appName}.concat.js"
    ng-annotate -o ${appName}.annotate.js -a ${appName}.concat.js

    # Uglify to produce the final output
    if $shouldUglify; then
        echo >&2 "${appName}.js uglifies ${appName}.annotate.js"
        uglifyjs ${appName}.annotate.js --output ${appName}.js \
            --in-source-map ${appName}.concat.js.map --source-map ${appName}.js.map \
            --mangle --compress \
            #
    else
        ln -vf ${appName}.annotate.js ${appName}.js
    fi
else
    echo >&2 "${appName}.js is up-to-date"
fi
