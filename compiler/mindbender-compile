#!/usr/bin/env bash
# mindbender-compile -- Compiles given MindBender specification
# Usage: mindbender compile MB_FILE [OUTPUT_DIR]
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2014-09-26
set -eu

[[ $# -gt 0 ]] || usage "$0" "MB_FILE must be specified"
ConfigFile=$1; shift
OutputDir=${1:-${ConfigFile%.mb}.deepdive}

[[ -e "$ConfigFile" ]] || error "$ConfigFile: Not found"
[[ -r "$ConfigFile" ]] || error "$ConfigFile: Not accessible"

# Initialize output dir
mkdir -p "$OutputDir"
jsonFile=application.mb.orig.json
jsonFileNormalized=application.mb.json

# Parse MindBender HOCON into JSON falling back to the skeleton
hocon2json "$ConfigFile" "$MINDBENDER_HOME/etc/skeleton.mb" >"$OutputDir/$jsonFile"

# Keep a copy of the original MindBender specification
cp -pf "$ConfigFile" "$OutputDir/application.mb"

cd "$OutputDir"
# Normalize most syntactic sugars first
normalize-mindbender "$jsonFile" >"$jsonFileNormalized"

# Check if the specification is valid
# TODO validate with Avro or JSON schema?
# See: http://avro.apache.org/docs/current/gettingstartedpython.html
# See: http://json-schema.org
validate-mindbender "$jsonFileNormalized"

mkdir -p ddl ext schemas tooling
# Generate DeepDive application.conf
generate-deepdive-application "$jsonFileNormalized" >application.conf
# TODO codegen ddl, meta, schemas, tooling

echo "Generated $OutputDir"
