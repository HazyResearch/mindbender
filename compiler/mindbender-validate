#!/usr/bin/env coffee
# mindbender-validate -- Validate MindBender specification
# Usage: mindbender-validate MB_FILE_IN_JSON
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2014-09-29

fs = require "fs"
_ = require "underscore"

[configFile] = process.argv[2..]

try
    # parse the JSON MindBender spec
    config = (JSON.parse (fs.readFileSync configFile)).mindbender

    # prepare some helper functions
    check = (description, assertions...) ->
        for a in assertions when not a
            throw new Error description

    # check artifacts
    check "At least one artifact must be defined", (_.size config.artifacts) > 0
    for name,artifact of config.artifacts
        # some basic checks
        check "Artifact #{name} must have a schema",   artifact.schema?
        check "Artifact #{name} must have a producer", artifact.producer?
        # check referential integrity in inputs
        if artifact.inputs?.length > 0
            for refArtifactName in artifact.inputs
                check "Artifact #{refArtifactName} (specified as inputs to #{name}) must exist", config.artifacts[refArtifactName]?
        # check referential integrity in schema.*.lineage
        for attrName,attrSchema of artifact.schema when attrSchema.lineage?
            [inputArtifactName, inputArtifactField] = attrSchema.lineage.split ".", 2
            check "Incorrect lineage for #{name}.#{attrName}: No such input artifact #{inputArtifactName}", inputArtifactName in artifact.inputs

    # TODO more checks

    # exit with zero status if all checks pass
    process.exit 0
catch err
    console.error err.message

# exit with non-zero status by default
process.exit 2
